{
	"info": {
		"_postman_id": "b4edf495-705d-43c2-ba88-b135de1a9578",
		"name": "Student Incentive System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49379645",
		"_collection_link": "https://www.postman.com/charak-ali-2639203/workspace/phantom-coders-s-workspace/collection/49379645-b4edf495-705d-43c2-ba88-b135de1a9578?action=share&source=collection_link&creator=49379645"
	},
	"item": [
		{
			"name": "Home",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"\tpm.response.to.not.be.error;\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}",
					"host": [
						"{{host}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"\tpm.response.to.not.be.error;\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Student created test\", function () {\r",
							"\r",
							"\tlet jsonData = pm.response.json();\r",
							"\tpm.expect(\r",
							"\t\tjsonData['message'].includes(\"Student created successfully with ID:\")\r",
							"\t).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Student1\",\r\n    \"password\": \"student1pass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/student",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"student"
					]
				}
			},
			"response": [
				{
					"name": "Create Student",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Student1\",\r\n    \"password\": \"student1pass\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/student",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"student"
							]
						}
					},
					"status": "CREATED",
					"code": 201,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.9"
						},
						{
							"key": "Date",
							"value": "Fri, 24 Oct 2025 21:59:19 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "59"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Student created successfully with ID: 7\"\n}"
				}
			]
		},
		{
			"name": "Create Staff",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"\tpm.response.to.not.be.error;",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Staff created test\", function () {",
							"",
							"\tlet jsonData = pm.response.json();",
							"\tpm.expect(",
							"\t\tjsonData['message'].includes(\"Staff created successfully with ID:\")",
							"\t).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Staff1\",\r\n    \"password\": \"staff1pass\",\r\n    \"staffId\": \"S004\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/staff",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"staff"
					]
				}
			},
			"response": [
				{
					"name": "Create Staff",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Staff1\",\r\n    \"password\": \"staff1pass\",\r\n    \"staffId\": \"S004\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/staff",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"staff"
							]
						}
					},
					"status": "CREATED",
					"code": 201,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.9"
						},
						{
							"key": "Date",
							"value": "Fri, 24 Oct 2025 22:10:58 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "57"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Staff created successfully with ID: 8\"\n}"
				}
			]
		},
		{
			"name": "Student Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returned Access Token\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
							"    pm.environment.set('staff_token', jsonData['access_token']) \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Student1\",\r\n    \"password\": \"student1pass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Login",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Student1\",\r\n    \"password\": \"student1pass\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.9"
						},
						{
							"key": "Date",
							"value": "Fri, 24 Oct 2025 22:11:37 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "289"
						},
						{
							"key": "Set-Cookie",
							"value": "access_token={{vault:json-web-token}}; Secure; HttpOnly; Path=/"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"access_token\": \"{{vault:json-web-token}}\"\n}"
				}
			]
		},
		{
			"name": "Identify",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"\tpm.response.to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test(\"Identify test\", function () {\r",
							"\r",
							"\tlet jsonData = pm.response.json();\r",
							"\tpm.expect(\r",
							"\t\tjsonData['message'].includes(\"username\")\r",
							"\t).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "JWT {{staff_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}} /api/identify",
					"host": [
						"{{host}} "
					],
					"path": [
						"api",
						"identify"
					]
				}
			},
			"response": [
				{
					"name": "Identify",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}} /api/identify",
							"host": [
								"{{host}} "
							],
							"path": [
								"api",
								"identify"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.9"
						},
						{
							"key": "Date",
							"value": "Fri, 24 Oct 2025 22:12:34 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "130"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"username: Student1, id: 7\",\n    \"user\": {\n        \"id\": 7,\n        \"user_type\": \"student\",\n        \"username\": \"Student1\"\n    }\n}"
				}
			]
		},
		{
			"name": "(Student) Request Confirmation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"\tpm.response.to.not.be.error;\r",
							"    pm.response.to.have.status(202);\r",
							"});\r",
							"\r",
							"pm.test(\"Valid Student ID or Negative Hours\", function () {\r",
							"\r",
							"\tlet jsonData = pm.response.json();\r",
							"\tpm.expect(\r",
							"\t\tjsonData['message'].includes(\"Error creating confirmation\")\r",
							"\t).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test(\"Request Confirmation Test\", function () {\r",
							"\r",
							"\tlet jsonData = pm.response.json();\r",
							"\tpm.expect(\r",
							"\t\tjsonData['message'].includes(\"Confirmation pending\")\r",
							"\t).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "JWT {{staff_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"student_id\": 1,\r\n    \"hours\": 53.5\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}} /api/request",
					"host": [
						"{{host}} "
					],
					"path": [
						"api",
						"request"
					]
				}
			},
			"response": [
				{
					"name": "(Student) Request Confirmation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"student_id\": 1,\r\n    \"hours\": 53.5\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}} /api/request",
							"host": [
								"{{host}} "
							],
							"path": [
								"api",
								"request"
							]
						}
					},
					"status": "ACCEPTED",
					"code": 202,
					"_postman_previewlanguage": "",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.9"
						},
						{
							"key": "Date",
							"value": "Fri, 24 Oct 2025 22:24:21 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "40"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date",
							"domain": "",
							"path": ""
						}
					],
					"body": "{\n    \"message\": \"Confirmation pending\"\n}"
				}
			]
		},
		{
			"name": "(Student) View Accolades",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"\tpm.response.to.not.be.error;\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Request View_Accolade Test\", function () {\r",
							"\r",
							"\tlet jsonData = pm.response.json();\r",
							"\tpm.expect(\r",
							"        jsonData['message'].includes('Milestone 50 hours achieved!'),\r",
							"        jsonData['message'].includes('Milestone 25 hours achieved!'),\r",
							"        jsonData['message'].includes('Milestone 10 hours achieved!'),\r",
							"        jsonData['message'].includes('No milestones achieved yet.')\r",
							"\r",
							"\t).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"student_id\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/view_accolade",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"view_accolade"
					]
				}
			},
			"response": [
				{
					"name": "(Student) View Accolades",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"student_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/view_accolade",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"view_accolade"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.9"
						},
						{
							"key": "Date",
							"value": "Fri, 24 Oct 2025 22:13:46 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "48"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date",
							"domain": "",
							"path": ""
						}
					],
					"body": "{\n    \"message\": \"Milestone 50 hours achieved!\"\n}"
				}
			]
		},
		{
			"name": "Staff Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returned Access Token\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(pm.response.text()).to.include(\"access_token\");\r",
							"    pm.environment.set('staff_token', jsonData['access_token']) \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Staff1\",\r\n    \"password\": \"staff1pass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Login",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Student1\",\r\n    \"password\": \"student1pass\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.9"
						},
						{
							"key": "Date",
							"value": "Fri, 24 Oct 2025 22:11:37 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "289"
						},
						{
							"key": "Set-Cookie",
							"value": "access_token={{vault:json-web-token}}; Secure; HttpOnly; Path=/"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"access_token\": \"{{vault:json-web-token}}\"\n}"
				}
			]
		},
		{
			"name": "(Staff) Log Confirmation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Staff created test\", function () {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData['message'].includes(\"Confirmation returned successfully with ID:\")).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "JWT {{staff_token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/confirmations/:confirmationId",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"confirmations",
						":confirmationId"
					],
					"variable": [
						{
							"key": "confirmationId",
							"value": "7"
						}
					]
				}
			},
			"response": [
				{
					"name": "(Staff) Log Confirmation",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/confirmations/:confirmationId",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"confirmations",
								":confirmationId"
							],
							"variable": [
								{
									"key": "confirmationId",
									"value": "8"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.9"
						},
						{
							"key": "Date",
							"value": "Sat, 25 Oct 2025 02:28:30 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "88"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Confirmation returned successfully with ID: 8\",\n    \"status\": \"success\"\n}"
				}
			]
		},
		{
			"name": "View Leaderboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData;",
							"let isArray = false;",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is valid JSON\", function () {",
							"    try {",
							"        jsonData = pm.response.json();",
							"        isArray = Array.isArray(jsonData);",
							"        pm.expect(isArray, \"Response is not an array\").to.be.true;",
							"    } catch (e) {",
							"        pm.expect.fail(\"Response is not valid JSON: \" + e.message);",
							"    }",
							"});",
							"",
							"if (typeof jsonData !== \"undefined\" && isArray) {",
							"    pm.test(\"Array is sorted by hours descending\", function () {",
							"        for (let i = 1; i < jsonData.length; i++) {",
							"            pm.expect(jsonData[i - 1].hours, `Element at index ${i - 1} is less than element at index ${i}`).to.be.at.least(jsonData[i].hours);",
							"        }",
							"    });",
							"",
							"    pm.test(\"Each item has username and hours (hours is a number)\", function () {",
							"        jsonData.forEach((item, idx) => {",
							"            pm.expect(item).to.have.property('username');",
							"            pm.expect(item).to.have.property('hours');",
							"            pm.expect(item.hours, `hours at index ${idx} is not a number`).to.be.a('number');",
							"        });",
							"    });",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/view_leaderboard",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"view_leaderboard"
					]
				}
			},
			"response": [
				{
					"name": "View Leaderboard",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/view_leaderboard",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"view_leaderboard"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.9"
						},
						{
							"key": "Date",
							"value": "Sat, 25 Oct 2025 02:18:01 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "155"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"hours\": 300,\n        \"username\": \"rob\"\n    },\n    {\n        \"hours\": 31,\n        \"username\": \"bob\"\n    },\n    {\n        \"hours\": 4,\n        \"username\": \"alice\"\n    }\n]"
				}
			]
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"pm.test(\"Response indicates successful logout\", function () {",
							"    let responseJson;",
							"    try {",
							"        responseJson = pm.response.json();",
							"    } catch (e) {",
							"        pm.expect.fail(\"Response is not valid JSON: \" + e.message);",
							"        return;",
							"    }",
							"    pm.expect(responseJson['message'].includes(\"Logged Out!\")).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Staff1\",\r\n    \"password\": \"staff1pass\"\r\n}"
				},
				"url": {
					"raw": "{{host}}/api/logout",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"logout"
					]
				}
			},
			"response": [
				{
					"name": "Logout",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Staff1\",\r\n    \"password\": \"staff1pass\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"logout"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.13.9"
						},
						{
							"key": "Date",
							"value": "Fri, 24 Oct 2025 22:12:19 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "31"
						},
						{
							"key": "Set-Cookie",
							"value": "access_token=; Expires=Thu, 01 Jan 1970 00:00:00 GMT; Secure; HttpOnly; Path=/"
						},
						{
							"key": "Set-Cookie",
							"value": "refresh_token_cookie=; Expires=Thu, 01 Jan 1970 00:00:00 GMT; Secure; HttpOnly; Path=/"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Logged Out!\"\n}"
				}
			]
		}
	]
}